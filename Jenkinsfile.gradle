pipeline {

   agent {
      label 'codesigning'
   }

   environment {
      // Configure Gradle from the tools definition in Jenkins
      def gradleHome = tool 'gradle'
      PATH = "${gradleHome}/bin:${env.PATH}"
      
      //Set some defaults
      def workspace = pwd()
   }

   stages {
      stage('prep-workspace') { 
         steps {
            configFileProvider([configFile(fileId: '86dde059-684b-4300-b595-64e83c2dd217', targetLocation: 'settings.xml')]) {
            }
            configFileProvider([configFile(fileId: 'galasa-init-gradle', targetLocation: '.gradle/init.gradle')]) {
            }
         }
      }

      stage('maven') {
         // Unavoidable until all other projects are no longer dependent on using galasa-parent pom.xml as a parent.
         steps {
            withCredentials([string(credentialsId: 'galasa-gpg', variable: 'GPG')]) {
               withFolderProperties { withSonarQubeEnv('GalasaSonarQube') {
                  dir('galasa-parent') {
                     sh "mvn --settings ${workspace}/settings.xml -Dmaven.repo.local=${workspace}/repository -Dgpg.skip=${GPG_SKIP} -Dgpg.passphrase=$GPG -P ${MAVEN_PROFILE} -B -e -fae --non-recursive ${MAVEN_GOAL}"
                  }
               }
               }
            }
         }
      }

      stage('gradle') {
         steps {
            withCredentials([
               string(credentialsId: 'galasa-gpg', variable: 'GPG'),
               usernamePassword(credentialsId: 'galasa-nexus', usernameVariable: 'MAVENUSERNAME', passwordVariable: 'MAVENPASSWORD'),
               usernamePassword(credentialsId: 'gradle-cache', usernameVariable: 'CACHEUSERNAME', passwordVariable: 'CACHEPASSWORD')
            ]) {
               withFolderProperties { 
                  dir('galasa-parent') {
                     sh "gradle -s -Dgradle.user.home=${workspace}/.gradle -Psigning.gnupg.keyName=8534E695 -Psigning.gnupg.passphrase=$GPG ${GRADLE_CACHE} ${GRADLE_TASKS}"
                  }
               }
            }
         }
      }
   }
}
